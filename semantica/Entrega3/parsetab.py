
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'programaDO ELSE END FLOAT IF INTEGER MAIN PRINT PROGRAM STRING VAR VOID WHILE closing_anglbrack closing_brack closing_par comma comment const_float const_int const_string identifier op_assign op_div op_equals op_lesser_than op_lessthan_equal op_minus op_more_than op_morethan_equal op_mult op_not_equal op_plus opening_anglbrack opening_brack opening_par semicol twopointprograma : PROGRAM create_program semicol vars funcs complete_main body elim_programcreate_program : identifiercomplete_main : MAINelim_program : ENDvars : VAR var_definitionvars : var_definition : id_list twopoint type semicol var_definitionvar_definition : id_list twopoint type semicolid_list : identifier comma id_listid_list : identifiervar_definition : error twopoint type semicol var_definitionvar_definition : error twopoint type semicoltype : INTEGERtype : FLOATtype : STRINGfuncs : func funcsfuncs : func : VOID create_function opening_par param_list closing_par opening_brack create_func_quad body closing_brack end_functioncreate_function : identifiercreate_func_quad : varsend_function : semicolparam_list : param_list comma paramparam_list : paramparam_list : param : identifier twopoint typebody : opening_anglbrack statements closing_anglbrackstatements : statements statementstatements : statementstatements :statement : assignstatement : conditionstatement : cyclestatement : f_callstatement : print_statementassign : identifier op_assign expression semicolassign : identifier op_assign const_string semicolexpression : expexpression : exp op_lesser_than expexpression : exp op_more_than expexpression : exp op_lessthan_equal expexpression : exp op_morethan_equal expexpression : exp op_equals expexpression : exp op_not_equal expexp : exp op_plus termexp : exp op_minus termexp : termterm : term op_mult factorterm : term op_div factorterm : factorfactor : opening_par expression closing_parfactor : op_plus identifierfactor : op_plus ctefactor : op_minus identifierfactor : op_minus ctefactor : identifierfactor : ctecte : const_intcte : const_floatf_call : check_function opening_par arguments closing_par make_call_quadscheck_function : identifiermake_call_quads : semicolarguments : arguments comma expressionarguments : expressionarguments : print_statement : PRINT opening_par print_args closing_par last_printprint_args : print_args comma print_argprint_args : print_argprint_arg : expressionprint_arg : const_stringlast_print : semicollast_print_dummy : semicolprint_statement : PRINT opening_par error closing_par last_print_dummycycle : start_cycle body WHILE opening_par expression end_cycle semicolstart_cycle : DOstart_cycle_dummy : DOend_cycle : closing_parend_cycle_dummy : closing_parcycle : start_cycle_dummy body WHILE opening_par error end_cycle_dummy semicolcondition : IF opening_par expression gotof body check_else last_gotogotof : closing_pargotof_dummy : closing_parcheck_else : else_goto bodyelse_goto : ELSE last_goto : semicollast_goto_dummy : semicolcheck_else : condition : IF opening_par error gotof_dummy body check_else last_goto_dummy'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,32,33,],[0,-1,-4,]),'identifier':([2,7,10,22,24,25,34,35,36,37,38,39,40,51,52,54,55,56,59,60,62,70,72,74,92,93,94,95,96,97,98,99,100,101,104,105,113,116,118,137,138,140,141,143,144,155,156,158,159,160,161,],[4,14,19,14,41,50,41,-28,-30,-31,-32,-33,-34,14,14,-27,66,66,66,66,50,102,106,66,-35,-36,66,66,66,66,66,66,66,66,66,66,66,66,66,-59,-61,-65,-70,-72,-71,-79,-84,-87,-85,-73,-78,]),'semicol':([3,4,26,27,28,29,30,53,66,67,68,69,71,73,75,76,77,102,103,106,107,115,117,119,122,123,124,125,126,127,128,129,130,131,132,133,134,146,149,150,151,152,153,154,157,],[5,-2,51,-13,-14,-15,52,-26,-55,92,93,-37,-46,-49,-56,-57,-58,-51,-52,-53,-54,138,141,144,-38,-39,-40,-41,-42,-43,-44,-45,-47,-48,-50,-86,-86,156,159,160,-76,161,-77,163,-82,]),'VAR':([5,89,],[7,7,]),'VOID':([5,6,9,11,51,52,64,65,162,163,],[-6,10,10,-5,-8,-12,-7,-11,-18,-21,]),'MAIN':([5,6,8,9,11,17,51,52,64,65,162,163,],[-6,-17,16,-17,-5,-16,-8,-12,-7,-11,-18,-21,]),'error':([7,51,52,56,60,114,],[13,13,13,79,85,136,]),'opening_anglbrack':([11,15,16,43,44,47,51,52,64,65,89,109,110,111,112,120,121,147,148,],[-5,24,-3,24,24,-74,-8,-12,-7,-11,-6,24,-80,24,-81,24,-20,24,-83,]),'twopoint':([12,13,14,31,50,],[20,21,-10,-9,63,]),'comma':([14,25,27,28,29,48,49,59,66,69,71,73,75,76,77,82,83,84,86,87,88,90,91,102,103,106,107,122,123,124,125,126,127,128,129,130,131,132,139,142,],[22,-24,-13,-14,-15,62,-23,-64,-55,-37,-46,-49,-56,-57,-58,116,-63,118,-67,-68,-69,-22,-25,-51,-52,-53,-54,-38,-39,-40,-41,-42,-43,-44,-45,-47,-48,-50,-62,-66,]),'opening_par':([18,19,41,42,45,46,55,56,59,60,74,80,81,94,95,96,97,98,99,100,101,104,105,113,116,118,],[25,-19,-60,56,59,60,74,74,74,74,74,113,114,74,74,74,74,74,74,74,74,74,74,74,74,74,]),'INTEGER':([20,21,63,],[27,27,27,]),'FLOAT':([20,21,63,],[28,28,28,]),'STRING':([20,21,63,],[29,29,29,]),'END':([23,53,],[33,-26,]),'closing_anglbrack':([24,34,35,36,37,38,39,40,54,92,93,137,138,140,141,143,144,155,156,158,159,160,161,],[-29,53,-28,-30,-31,-32,-33,-34,-27,-35,-36,-59,-61,-65,-70,-72,-71,-79,-84,-87,-85,-73,-78,]),'IF':([24,34,35,36,37,38,39,40,54,92,93,137,138,140,141,143,144,155,156,158,159,160,161,],[42,42,-28,-30,-31,-32,-33,-34,-27,-35,-36,-59,-61,-65,-70,-72,-71,-79,-84,-87,-85,-73,-78,]),'PRINT':([24,34,35,36,37,38,39,40,54,92,93,137,138,140,141,143,144,155,156,158,159,160,161,],[46,46,-28,-30,-31,-32,-33,-34,-27,-35,-36,-59,-61,-65,-70,-72,-71,-79,-84,-87,-85,-73,-78,]),'DO':([24,34,35,36,37,38,39,40,54,92,93,137,138,140,141,143,144,155,156,158,159,160,161,],[47,47,-28,-30,-31,-32,-33,-34,-27,-35,-36,-59,-61,-65,-70,-72,-71,-79,-84,-87,-85,-73,-78,]),'closing_par':([25,27,28,29,48,49,59,66,69,71,73,75,76,77,78,79,82,83,84,85,86,87,88,90,91,102,103,106,107,108,122,123,124,125,126,127,128,129,130,131,132,135,136,139,142,],[-24,-13,-14,-15,61,-23,-64,-55,-37,-46,-49,-56,-57,-58,110,112,115,-63,117,119,-67,-68,-69,-22,-25,-51,-52,-53,-54,132,-38,-39,-40,-41,-42,-43,-44,-45,-47,-48,-50,151,153,-62,-66,]),'op_assign':([41,],[55,]),'WHILE':([53,57,58,],[-26,80,81,]),'ELSE':([53,133,134,],[-26,148,148,]),'closing_brack':([53,145,],[-26,154,]),'const_string':([55,60,118,],[68,88,88,]),'op_plus':([55,56,59,60,66,69,71,73,74,75,76,77,94,95,96,97,98,99,100,101,102,103,104,105,106,107,113,116,118,122,123,124,125,126,127,128,129,130,131,132,],[70,70,70,70,-55,100,-46,-49,70,-56,-57,-58,70,70,70,70,70,70,70,70,-51,-52,70,70,-53,-54,70,70,70,100,100,100,100,100,100,-44,-45,-47,-48,-50,]),'op_minus':([55,56,59,60,66,69,71,73,74,75,76,77,94,95,96,97,98,99,100,101,102,103,104,105,106,107,113,116,118,122,123,124,125,126,127,128,129,130,131,132,],[72,72,72,72,-55,101,-46,-49,72,-56,-57,-58,72,72,72,72,72,72,72,72,-51,-52,72,72,-53,-54,72,72,72,101,101,101,101,101,101,-44,-45,-47,-48,-50,]),'const_int':([55,56,59,60,70,72,74,94,95,96,97,98,99,100,101,104,105,113,116,118,],[76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,]),'const_float':([55,56,59,60,70,72,74,94,95,96,97,98,99,100,101,104,105,113,116,118,],[77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,77,]),'opening_brack':([61,],[89,]),'op_mult':([66,71,73,75,76,77,102,103,106,107,128,129,130,131,132,],[-55,104,-49,-56,-57,-58,-51,-52,-53,-54,104,104,-47,-48,-50,]),'op_div':([66,71,73,75,76,77,102,103,106,107,128,129,130,131,132,],[-55,105,-49,-56,-57,-58,-51,-52,-53,-54,105,105,-47,-48,-50,]),'op_lesser_than':([66,69,71,73,75,76,77,102,103,106,107,128,129,130,131,132,],[-55,94,-46,-49,-56,-57,-58,-51,-52,-53,-54,-44,-45,-47,-48,-50,]),'op_more_than':([66,69,71,73,75,76,77,102,103,106,107,128,129,130,131,132,],[-55,95,-46,-49,-56,-57,-58,-51,-52,-53,-54,-44,-45,-47,-48,-50,]),'op_lessthan_equal':([66,69,71,73,75,76,77,102,103,106,107,128,129,130,131,132,],[-55,96,-46,-49,-56,-57,-58,-51,-52,-53,-54,-44,-45,-47,-48,-50,]),'op_morethan_equal':([66,69,71,73,75,76,77,102,103,106,107,128,129,130,131,132,],[-55,97,-46,-49,-56,-57,-58,-51,-52,-53,-54,-44,-45,-47,-48,-50,]),'op_equals':([66,69,71,73,75,76,77,102,103,106,107,128,129,130,131,132,],[-55,98,-46,-49,-56,-57,-58,-51,-52,-53,-54,-44,-45,-47,-48,-50,]),'op_not_equal':([66,69,71,73,75,76,77,102,103,106,107,128,129,130,131,132,],[-55,99,-46,-49,-56,-57,-58,-51,-52,-53,-54,-44,-45,-47,-48,-50,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'create_program':([2,],[3,]),'vars':([5,89,],[6,121,]),'funcs':([6,9,],[8,17,]),'func':([6,9,],[9,9,]),'var_definition':([7,51,52,],[11,64,65,]),'id_list':([7,22,51,52,],[12,31,12,12,]),'complete_main':([8,],[15,]),'create_function':([10,],[18,]),'body':([15,43,44,109,111,120,147,],[23,57,58,133,134,145,157,]),'type':([20,21,63,],[26,30,91,]),'elim_program':([23,],[32,]),'statements':([24,],[34,]),'statement':([24,34,],[35,54,]),'assign':([24,34,],[36,36,]),'condition':([24,34,],[37,37,]),'cycle':([24,34,],[38,38,]),'f_call':([24,34,],[39,39,]),'print_statement':([24,34,],[40,40,]),'start_cycle':([24,34,],[43,43,]),'start_cycle_dummy':([24,34,],[44,44,]),'check_function':([24,34,],[45,45,]),'param_list':([25,],[48,]),'param':([25,62,],[49,90,]),'expression':([55,56,59,60,74,113,116,118,],[67,78,83,87,108,135,139,87,]),'exp':([55,56,59,60,74,94,95,96,97,98,99,113,116,118,],[69,69,69,69,69,122,123,124,125,126,127,69,69,69,]),'term':([55,56,59,60,74,94,95,96,97,98,99,100,101,113,116,118,],[71,71,71,71,71,71,71,71,71,71,71,128,129,71,71,71,]),'factor':([55,56,59,60,74,94,95,96,97,98,99,100,101,104,105,113,116,118,],[73,73,73,73,73,73,73,73,73,73,73,73,73,130,131,73,73,73,]),'cte':([55,56,59,60,70,72,74,94,95,96,97,98,99,100,101,104,105,113,116,118,],[75,75,75,75,103,107,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'arguments':([59,],[82,]),'print_args':([60,],[84,]),'print_arg':([60,118,],[86,142,]),'gotof':([78,],[109,]),'gotof_dummy':([79,],[111,]),'create_func_quad':([89,],[120,]),'make_call_quads':([115,],[137,]),'last_print':([117,],[140,]),'last_print_dummy':([119,],[143,]),'check_else':([133,134,],[146,149,]),'else_goto':([133,134,],[147,147,]),'end_cycle':([135,],[150,]),'end_cycle_dummy':([136,],[152,]),'last_goto':([146,],[155,]),'last_goto_dummy':([149,],[158,]),'end_function':([154,],[162,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> PROGRAM create_program semicol vars funcs complete_main body elim_program','programa',8,'p_programa','main.py',18),
  ('create_program -> identifier','create_program',1,'p_create_program','main.py',22),
  ('complete_main -> MAIN','complete_main',1,'p_complete_main','main.py',27),
  ('elim_program -> END','elim_program',1,'p_elim_program','main.py',31),
  ('vars -> VAR var_definition','vars',2,'p_vars','main.py',43),
  ('vars -> <empty>','vars',0,'p_vars_empty','main.py',47),
  ('var_definition -> id_list twopoint type semicol var_definition','var_definition',5,'p_definition','main.py',51),
  ('var_definition -> id_list twopoint type semicol','var_definition',4,'p_definition_once','main.py',56),
  ('id_list -> identifier comma id_list','id_list',3,'p_id_list','main.py',61),
  ('id_list -> identifier','id_list',1,'p_id_list_once','main.py',66),
  ('var_definition -> error twopoint type semicol var_definition','var_definition',5,'p_definition_error','main.py',72),
  ('var_definition -> error twopoint type semicol','var_definition',4,'p_definition_once_error','main.py',78),
  ('type -> INTEGER','type',1,'p_type_int','main.py',85),
  ('type -> FLOAT','type',1,'p_type_float','main.py',89),
  ('type -> STRING','type',1,'p_type_string','main.py',93),
  ('funcs -> func funcs','funcs',2,'p_funcs','main.py',99),
  ('funcs -> <empty>','funcs',0,'p_funcs_empty','main.py',103),
  ('func -> VOID create_function opening_par param_list closing_par opening_brack create_func_quad body closing_brack end_function','func',10,'p_func','main.py',107),
  ('create_function -> identifier','create_function',1,'p_create_function','main.py',111),
  ('create_func_quad -> vars','create_func_quad',1,'p_create_func_quad','main.py',115),
  ('end_function -> semicol','end_function',1,'p_end_function','main.py',120),
  ('param_list -> param_list comma param','param_list',3,'p_param_list','main.py',125),
  ('param_list -> param','param_list',1,'p_param_list_once','main.py',129),
  ('param_list -> <empty>','param_list',0,'p_param_list_empty','main.py',133),
  ('param -> identifier twopoint type','param',3,'p_param','main.py',137),
  ('body -> opening_anglbrack statements closing_anglbrack','body',3,'p_body','main.py',153),
  ('statements -> statements statement','statements',2,'p_statements','main.py',157),
  ('statements -> statement','statements',1,'p_statements_single','main.py',161),
  ('statements -> <empty>','statements',0,'p_statements_empty','main.py',165),
  ('statement -> assign','statement',1,'p_statement_assign','main.py',171),
  ('statement -> condition','statement',1,'p_statement_condition','main.py',176),
  ('statement -> cycle','statement',1,'p_statement_cycle','main.py',180),
  ('statement -> f_call','statement',1,'p_statement_f_call','main.py',184),
  ('statement -> print_statement','statement',1,'p_statement_print','main.py',188),
  ('assign -> identifier op_assign expression semicol','assign',4,'p_assign','main.py',193),
  ('assign -> identifier op_assign const_string semicol','assign',4,'p_assign_string','main.py',198),
  ('expression -> exp','expression',1,'p_expression','main.py',211),
  ('expression -> exp op_lesser_than exp','expression',3,'p_expression_less','main.py',214),
  ('expression -> exp op_more_than exp','expression',3,'p_expression_more','main.py',218),
  ('expression -> exp op_lessthan_equal exp','expression',3,'p_expression_less_equal','main.py',222),
  ('expression -> exp op_morethan_equal exp','expression',3,'p_expression_more_equal','main.py',226),
  ('expression -> exp op_equals exp','expression',3,'p_expression_equals','main.py',230),
  ('expression -> exp op_not_equal exp','expression',3,'p_expression_not_equal','main.py',234),
  ('exp -> exp op_plus term','exp',3,'p_exp_suma','main.py',239),
  ('exp -> exp op_minus term','exp',3,'p_exp_minus','main.py',243),
  ('exp -> term','exp',1,'p_exp_term','main.py',248),
  ('term -> term op_mult factor','term',3,'p_term_mult','main.py',252),
  ('term -> term op_div factor','term',3,'p_term_div','main.py',256),
  ('term -> factor','term',1,'p_term_factor','main.py',260),
  ('factor -> opening_par expression closing_par','factor',3,'p_factor_expression','main.py',266),
  ('factor -> op_plus identifier','factor',2,'p_factor_plus_id','main.py',269),
  ('factor -> op_plus cte','factor',2,'p_factor_plus_cte','main.py',283),
  ('factor -> op_minus identifier','factor',2,'p_factor_minus_id','main.py',287),
  ('factor -> op_minus cte','factor',2,'p_factor_minus_cte','main.py',301),
  ('factor -> identifier','factor',1,'p_factor_id','main.py',305),
  ('factor -> cte','factor',1,'p_factor_cte','main.py',318),
  ('cte -> const_int','cte',1,'p_cte_int','main.py',322),
  ('cte -> const_float','cte',1,'p_cte_float','main.py',326),
  ('f_call -> check_function opening_par arguments closing_par make_call_quads','f_call',5,'p_f_call','main.py',331),
  ('check_function -> identifier','check_function',1,'p_check_function','main.py',336),
  ('make_call_quads -> semicol','make_call_quads',1,'p_make_call_quads','main.py',347),
  ('arguments -> arguments comma expression','arguments',3,'p_arguments_mult','main.py',352),
  ('arguments -> expression','arguments',1,'p_arguments_single','main.py',357),
  ('arguments -> <empty>','arguments',0,'p_arguments_empty','main.py',362),
  ('print_statement -> PRINT opening_par print_args closing_par last_print','print_statement',5,'p_print_statement','main.py',375),
  ('print_args -> print_args comma print_arg','print_args',3,'p_print_args','main.py',378),
  ('print_args -> print_arg','print_args',1,'p_print_args_single','main.py',381),
  ('print_arg -> expression','print_arg',1,'p_print_arg_expression','main.py',384),
  ('print_arg -> const_string','print_arg',1,'p_print_arg_string','main.py',389),
  ('last_print -> semicol','last_print',1,'p_last_print','main.py',395),
  ('last_print_dummy -> semicol','last_print_dummy',1,'p_last_print_dummy','main.py',400),
  ('print_statement -> PRINT opening_par error closing_par last_print_dummy','print_statement',5,'p_print_error','main.py',404),
  ('cycle -> start_cycle body WHILE opening_par expression end_cycle semicol','cycle',7,'p_cycle','main.py',411),
  ('start_cycle -> DO','start_cycle',1,'p_start_cycle','main.py',414),
  ('start_cycle_dummy -> DO','start_cycle_dummy',1,'p_start_cycle_dummy','main.py',418),
  ('end_cycle -> closing_par','end_cycle',1,'p_end_cycle','main.py',421),
  ('end_cycle_dummy -> closing_par','end_cycle_dummy',1,'p_end_cycle_dummy','main.py',426),
  ('cycle -> start_cycle_dummy body WHILE opening_par error end_cycle_dummy semicol','cycle',7,'p_cycle_error','main.py',430),
  ('condition -> IF opening_par expression gotof body check_else last_goto','condition',7,'p_condition','main.py',438),
  ('gotof -> closing_par','gotof',1,'p_gotof','main.py',441),
  ('gotof_dummy -> closing_par','gotof_dummy',1,'p_gotof_dummy','main.py',445),
  ('check_else -> else_goto body','check_else',2,'p_check_else','main.py',448),
  ('else_goto -> ELSE','else_goto',1,'p_else_goto','main.py',452),
  ('last_goto -> semicol','last_goto',1,'p_last_goto','main.py',457),
  ('last_goto_dummy -> semicol','last_goto_dummy',1,'p_last_goto_dummy','main.py',462),
  ('check_else -> <empty>','check_else',0,'p_check_else_empty','main.py',465),
  ('condition -> IF opening_par error gotof_dummy body check_else last_goto_dummy','condition',7,'p_condition_error','main.py',470),
]
